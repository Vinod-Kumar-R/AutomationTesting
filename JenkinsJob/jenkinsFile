pipeline {
	agent {
    	label params['agent-name']
	}
parameters {
    agentParameter name:'agent-name'
    choice(name: 'Browser', choices: ['CHROME','FIREFOX','OPERA','EDGE','IEXPLORER','SAFARI','ANDROID_CHROME','IOS_SAFARI','MOBILE_EMULATION','BROWSER_STACK'], description: 'abcd');
    text defaultValue: 'User input required ', description: 'This is used to set the configuration file for automation', name: 'InputParameter'
}
environment {
  automation = "automation"
}

stages {
    
    stage('Build'){
        steps{
          build 'Automation Build'
          //input id: 'StartScript', message: 'Run Automation Script', ok: 'Build Success', submitter: 'tester'
        }
    }
    
    stage('Execute Autoamtion'){
    	steps{
    	    script {
    	        deleteDir()
    	        if(isUnix()){
    	           echo "this is used for linux or mac system" 
    		    } else {
    		        copyArtifacts filter: 'target/EncashAutomation.jar,target/lib/*.jar,target/properties/*.*,target/extension/*.*', projectName: 'Automation Build', selector: upstream(fallbackToLastSuccessful: true)
    		        fileOperations([folderCreateOperation('automation'), folderCopyOperation(destinationFolderPath: 'automation/properties', sourceFolderPath: 'target/properties'), folderCopyOperation(destinationFolderPath: 'automation/extension', sourceFolderPath: 'target/extension')])
    		        bat label: 'start Automation', script: "java -jar $InputParameter ./target/EncashAutomation.jar"
    		  		}
    	    	}
    		}
    	}
	}
}